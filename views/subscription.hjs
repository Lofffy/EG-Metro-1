<!DOCTYPE html>
<html>
<head>
  <title>Subscription Payment</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      padding: 20px;
    }

h1 {
  text-align: center;
  color: #333;
}

form {
  max-width: 400px;
  margin: 0 auto;
  background-color: #fff;
  padding: 20px;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

label {
  display: block;
  margin-bottom: 10px;
}

input[type="text"],
input[type="number"],
select {
  width: 100%;
  padding: 8px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
  margin-bottom: 10px;
}

input[type="submit"] {
  background-color: #4CAF50;
  color: #fff;
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

input[type="submit"]:hover {
  background-color: #45a049;
}

.error-message {
  color: red;
  margin-top: 10px;
}

.success-message {
  color: green;
  margin-top: 10px;
}

.container {
  max-width: 600px;
  padding: 20px;
  background-color: #fff;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}
.container {
      width: 300px; /* Set a fixed width for the container */
      margin-left: auto; /* Automatically calculate and set the left margin */
      margin-right: auto; /* Automatically calculate and set the right margin */
    }

table {
  width: 100%;
  border-collapse: collapse;
}

th, td {
  padding: 10px;
  text-align: left;
  border-bottom: 1px solid #ddd;
}

th {
  background-color: #f5f5f5;
}

.station-name-input,
.station-type-input {
  width: 100%;
  padding: 5px;
}

.station-name-input {
  display: none;
}

#message {
  margin-top: 20px;
  color: green;
  text-align: center;
}
  </style>
  <style>
    .navbar-container {
        background-color: #333;
        color: #fff;
        padding: 10px 20px;
        font-family: Arial, sans-serif;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
    }

    .navbar {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .navbar li {
        display: inline-block;
        margin-right: 10px;
    }

    .navbar li a {
        color: #fff;
        text-decoration: none;
        padding: 5px 10px;
    }

    .navbar li a:hover {
        background-color: #555;
        border-radius: 5px;
    }
</style>

<div class="navbar-container">
    <ul class="navbar">
        <li><a class="active" href="/subscriptions">Subscriptions</a></li>
        <li><a href="/tickets">Tickets</a></li>
        <li><a href="/prices">Prices</a></li>
        <li><a href="/rides/simulate">Rides</a></li>
        <li><a href="/requests/refund">Request Refund</a></li>
                <li><a href="/myrequsets">My Requssets</a></li>
        <li><a href="/requests/senior">Request Senior</a></li>
        <li><a href="/">Logout</a></li>
    </ul>
</div>

</head>
<body>
  <h1>Subscription Payment</h1>
  <form id="subscriptionForm">
   

<label for="creditCardNumber">Credit Card Number:</label>
<input type="text" id="creditCardNumber" name="creditCardNumber" required>

<label for="holderName">Card Holder Name:</label>
<input type="text" id="holderName" name="holderName" required>

<label for="payedAmount">Amount Paid:</label>
<input type="number" id="payedAmount" name="payedAmount" required>

<label for="subType">Subscription Type:</label>
<select id="subType" name="subType" required>
  <option value="annual">Annual</option>
  <option value="month">Monthly</option>
  <option value="quarterly">Quarterly</option>
</select>

<label for="zoneId">Zone ID:</label>
<input type="text" id="zoneId" name="zoneId" required>

<input type="submit" value="Submit">
<p class="error-message" id="errorMessage"></p>
<p class="success-message" id="successMessage"></p>
  </form>
  <div class="container">
    <h1>Zones</h1>
    <table>
      <thead>
        <tr>
          <th>Zone ID</th>
          <th>Zone Type</th>
          <th>Price</th>
        </tr>
      </thead>
      <tbody id="zonesTableBody">
      </tbody>
    </table>
    <p id="message"></p>
  </div>
  <script>
    document.getElementById("subscriptionForm").addEventListener("submit", async function(event) {
      event.preventDefault();

      const form = event.target;
      const data = {
        creditCardNumber: form.elements["creditCardNumber"].value,
        holderName: form.elements["holderName"].value,
        payedAmount: form.elements["payedAmount"].value,
        subType: form.elements["subType"].value,
        zoneId: form.elements["zoneId"].value
      };

      try {
        const response = await fetch("/api/v1/payment/subscription", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (response.ok) {
          // Subscription successful
          document.getElementById("successMessage").textContent = result.message;
          document.getElementById("errorMessage").textContent = "";
          form.reset();
        } else {
          // Error occurred
          document.getElementById("errorMessage").textContent = result.error;
          document.getElementById("successMessage").textContent = "";
        }
      } catch (error) {
        // Network or server error
        console.error("Error:", error);
        document.getElementById("errorMessage").textContent = "An error occurred. Please try again later.";
        document.getElementById("successMessage").textContent = "";
      }
    });

    async function fetchZones() {
      try {
        const response = await fetch("/api/v1/zones");
        const zones = await response.json();

        if (response.ok) {
          const zonesTableBody = document.getElementById("zonesTableBody");

          zones.forEach(zone => {
            const row = document.createElement("tr");

            const zoneId = document.createElement("td");
            zoneId.textContent = zone.id;
            row.appendChild(zoneId);

            const zoneType = document.createElement("td");
            zoneType.innerHTML = `<span class="station-name">${zone.zonetype}</span>`;
            row.appendChild(zoneType);

            const price = document.createElement("td");
            price.innerHTML = `<span class="station-type">${zone.price}</span>`;
            row.appendChild(price);

            zonesTableBody.appendChild(row);
          });
        } else {
          document.getElementById("message").textContent = "Failed to fetch zones.";
        }
      } catch (error) {
        console.error("Error:", error);
        document.getElementById("message").textContent = "An error occurred. Please try again later.";
      }
    }

    fetchZones();
  </script>
</body>
</html>



